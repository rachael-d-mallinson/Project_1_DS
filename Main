import java.util.Scanner;

public class Main {
	/**
	 * Splits polynomials into Term objects comprised of coefficients and exponents
	 * @param input: A polynomial entered as a String
	 * @return: An ArrayList of Term objects
	 */
	public static ArrayList<Term> splitPolynomial(String input) {
		ArrayList<Term> terms = new ArrayList<>(); // Create a new ArrayList to hold terms
		input = input.replace("-", "+-"); // Replace all negatives with +-
		
		// Create a new ArrayList of Strings split at the plus sign
		List<String> poly = new ArrayList<String>(Arrays.asList(input.split("\\+"))); 

		// If any list items are empty, remove them
		for (int i = 0; i < poly.size(); i++) {
			if (poly.get(i).isEmpty()) {
				poly.remove(i);
			}
		}

		// Create variables to later be added to a Term object
		int constant = 0;
		int coefficient = 0;
		int exponent = 0;
		for (int i = 0; i < poly.size(); i++) {
			// If the list item has an exponent
			if (poly.get(i).contains("^")) {
				// If the last item in the string is the exponent notation
				if (poly.get(i).charAt(poly.get(i).length() - 1) == '^') {
					if (poly.get(i).charAt(0) == 'X') {
						coefficient = 1;
					} else if (poly.get(i).charAt(0) == '-' && poly.get(i).charAt(1) == 'X') {
						coefficient = -1;
					} else {
						coefficient = Integer.parseInt(poly.get(i).substring(0, poly.get(i).length() - 2));
					}
					// The exponent is the next item in the list
					exponent = Integer.parseInt(poly.get(i + 1));
					i++; // Advance i manually
				} else { // If the exponent notation is in the middle of the string
					// Split the string at the exponent notation
					String arr2[] = poly.get(i).split("\\^");
					if (arr2[0].charAt(0) == 'X') {
						coefficient = 1;
					} else if (arr2[0].charAt(0) == '-' && poly.get(i).charAt(1) == 'X') {
						coefficient = -1;
					} else {
						coefficient = Integer.parseInt(arr2[0].substring(0, arr2[0].length() - 1));
					}
					exponent = Integer.parseInt(arr2[1]);
				}
				// Create a new Term and add it to the ArrayList
				Term term = new Term(coefficient, exponent);
				terms.add(term);
				// If the list item contains X but no exponent notation
			} else if (poly.get(i).contains("X") && !poly.get(i).contains("^")) {
				if (poly.get(i).charAt(0) == 'X') {
					coefficient = 1;
				} else if (poly.get(i).charAt(0) == '-' && poly.get(i).charAt(1) == 'X') {
					coefficient = -1;
				} else {
					coefficient = Integer.parseInt(poly.get(i).substring(0, poly.get(i).length() - 1));
				}
				// Create a new Term and add it to the ArrayList
				Term term = new Term(coefficient, 1);
				terms.add(term);
				// If the list item does not contain X it is a constant
			} else if (!poly.get(i).contains("X")) {
				constant = Integer.parseInt(poly.get(i));
				// Add the Term to the ArrayList
				Term term = new Term(constant, 0);
				terms.add(term);
			}
		}

		return terms;
	}
	
	/**
	 * Outputs a polynomial in a user-friendly way
	 * @param terms: An ArrayList of Terms
	 * @return: A polynomial as a String
	 */
	public static String outputPolynomial(ArrayList<Term> terms) {
		Iterator<Term> iterator = terms.iterator();
		StringBuilder poly = new StringBuilder();
		while (iterator.hasNext()) {
			Term term = iterator.next();
			if (poly.length() == 0) {}
			if (term.getExponent() == 0) {
				if (term.getCoefficient() < 1) {
					if (poly.length() == 0) { poly.append(String.format("%d ", term.getCoefficient())); }
					else { poly.append(String.format("- %d ", Math.abs(term.getCoefficient()))); }
				} else {
					if (poly.length() == 0) { poly.append(String.format("%d ", term.getCoefficient())); }
					else { poly.append(String.format("+ %d ", term.getCoefficient())); }
				}
			} else if (term.getCoefficient() == 1 && term.getExponent() == 1) {
				if (poly.length() == 0) { poly.append("X "); }
				else { poly.append("+ X "); }
			} else if (term.getCoefficient() == -1 && term.getExponent() == 1) {
				if (poly.length() == 0) { poly.append("-X "); }
				else { poly.append("- X "); }
			} else if (term.getCoefficient() == 1 && term.getExponent() != 1) {
				if (poly.length() == 0) { poly.append(String.format("X^%d ", term.getExponent())); }
				else { poly.append(String.format("+ X^%d ", term.getExponent())); }
			} else if (term.getCoefficient() == -1 && term.getExponent() != 1) {
				if (poly.length() == 0) { poly.append(String.format("-X^%d ", term.getExponent())); }
				else { poly.append(String.format("- X^%d ", term.getExponent())); }
			} else {
				if (term.getCoefficient() < 1) {
					if (poly.length() == 0) { poly.append(String.format("-%dX^%d ", Math.abs(term.getCoefficient()), term.getExponent())); }
					else { poly.append(String.format("- %dX^%d ", Math.abs(term.getCoefficient()), term.getExponent())); }
				} else {
					if (poly.length() == 0) { poly.append(String.format("%dX^%d ", Math.abs(term.getCoefficient()), term.getExponent())); }
					else { poly.append(String.format("+ %dX^%d ", term.getCoefficient(), term.getExponent())); }
				}
			}		
		}
		return poly.toString();	
	}


	public static void main (String[] args) {
		Scanner scnr = new Scanner(System.in);
		
		//Make a user-friendly menu
		String UserMenuPrompt = "Polynomial Calculator\nPlease Choose your Menu Option by choosing a Number to enter.";
		String UserMenuOptions = " 1. Enter Two Polynomials to Add \n 2. Add the entered Polynomials\n 3. Quit\nEnter here:";
		boolean systemRunning = true;
		
		while (systemRunning) {
			System.out.println(UserMenuPrompt);		//title, and menu instructions
			System.out.print(UserMenuOptions);		//menu options
			int userChoice = scnr.nextInt();		//read in their choice
			String firstPoly;				//the first polynomial given
			String secondPoly;				//the second polynomial given
			ArrayList<Term> combined = new ArrayList<>(); 	// ArrayList to store both polynomials
		
			if (userChoice == 1) {
				System.out.print("First Polynomial: ");
				firstPoly = scnr.next();
				System.out.print("Second Polynomial: ");
				secondPoly = scnr.next();
			}
			else if (userChoice == 2) {
				combined.addAll(splitPolynomial(firstPoly));
				combined.addAll(splitPolynomial(secondPoly));
				System.out.print("Next step is to send combined ArrayList to be reduced.");
			}
			else if (userChoice == 3) {
				System.out.println("Thank you for using the Polynomial Calculator. Have a great day!");
				systemRunning = false;
			}
			else {
				System.out.println("Please pick one of the Menu Options. You'll be redirected.\n ");
			}
		}
		
	
		
		
		//need more code :)
		scnr.close();	
	}
}
